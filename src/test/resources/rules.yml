rule1:
  ruleId: rule1
  host: lightapi.net
  ruleType: generic
  visibility: public
  description: first rule for unit test
  conditions:
    - conditionId: cid1
      propertyPath: ClassA.Bobject.Cobject.Cint
      operatorCode: EQ
      joinCode: AND
      index: 0
      conditionValues:
        - conditionValueId: cv1
          conditionValue: 6
          valueTypeCode: STRING
  actions:
    - actionId: act1
      actionClassName: com.networknt.rule.ValidationAction

test-len-eq-int-rule:
  ruleId: test-len-eq-int-rule
  host: lightapi.net
  ruleType: generic
  visibility: public
  description: test string length equal to an integer
  conditions:
    - conditionId: cid1
      propertyPath: ClassA.Aname
      operatorCode: LEN_EQ
      joinCode: AND
      index: 0
      conditionValues:
        - conditionValueId: cv1
          conditionValue: 7
          valueTypeCode: INTEGER
  actions:
    - actionId: act1
      actionClassName: com.networknt.rule.ValidationAction

test-gte-rule:
  ruleId: test-gte-rule
  host: lightapi.net
  ruleType: generic
  visibility: public
  description: test greater than or equal to
  conditions:
    - conditionId: cid1
      propertyPath: ClassA.Bobject.Cobject.Cint
      operatorCode: GTE
      joinCode: AND
      index: 0
      conditionValues:
        - conditionValueId: cv1
          conditionValue: 6
          valueTypeCode: STRING
  actions:
    - actionId: act1
      actionClassName: com.networknt.rule.ValidationAction

test-lte-rule:
  ruleId: test-lte-rule
  host: lightapi.net
  ruleType: generic
  visibility: public
  description: test less than or equal to
  conditions:
    - conditionId: cid1
      propertyPath: ClassA.Bobject.Cobject.Cint
      operatorCode: LTE
      joinCode: AND
      index: 0
      conditionValues:
        - conditionValueId: cv1
          conditionValue: 6
          valueTypeCode: STRING
  actions:
    - actionId: act1
      actionClassName: com.networknt.rule.ValidationAction

role-based-auth:
  ruleId: role-based-auth
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: Role-based authorization rule for a particuler service with parameters different per endpoint.
  conditions:
    - conditionId: allow-role
      propertyPath: auditInfo.subject_claims.ClaimsMap.roles
      operatorCode: NNIL
      joinCode: OR
      index: 1
  actions:
    - actionId: match-role
      actionClassName: com.networknt.rule.FineGrainedAuthAction
      actionValues:
        - actionValueId: roles
          value: $roles

role-based-auth-skip-cc:
  ruleId: role-based-auth-skip-cc
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: Role-based authorization rule for a particuler service with parameters different per endpoint. Client Credentials token is allowed without role in claims
  conditions:
    - conditionId: allow-cc
      propertyPath: auditInfo.subject_claims.ClaimsMap.user_id
      operatorCode: NIL
      joinCode: OR
      index: 1
    - conditionId: allow-role
      propertyPath: auditInfo.subject_claims.ClaimsMap.roles
      operatorCode: NNIL
      joinCode: OR
      index: 2
  actions:
    - actionId: match-role
      actionClassName: com.networknt.rule.FineGrainedAuthAction
      actionValues:
        - actionValueId: roles
          value: $roles

cc-group-role-auth:
  ruleId: cc-group-role-auth
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: Role-based authorization rule for account service and allow cc token and transform group to role.
  conditions:
    - conditionId: allow-cc
      propertyPath: auditInfo.subject_claims.ClaimsMap.user_id
      operatorCode: NIL
      joinCode: OR
      index: 1
    - conditionId: manager
      propertyPath: auditInfo.subject_claims.ClaimsMap.groups
      operatorCode: CS
      joinCode: OR
      index: 2
      conditionValues:
        - conditionValueId: manager
          conditionValue: admin
    - conditionId: teller
      propertyPath: auditInfo.subject_claims.ClaimsMap.groups
      operatorCode: CS
      joinCode: OR
      index: 3
      conditionValues:
        - conditionValueId: teller
          conditionValue: frontOffice
    - conditionId: allow-role-jwt
      propertyPath: auditInfo.subject_claims.ClaimsMap.roles
      operatorCode: NNIL
      joinCode: OR
      index: 4
  actions:
    - actionId: match-role
      actionClassName: com.networknt.rule.FineGrainedAuthAction
      actionValues:
        - actionValueId: roles
          value: $roles

ccsid-group-role-auth:
  ruleId: ccsid-group-role-auth
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: Role-based authorization rule for account service and allow cc token with sid claim and transform group to role. This is for the controller and config server.
  conditions:
    - conditionId: allow-cc
      propertyPath: auditInfo.subject_claims.ClaimsMap.user_id
      operatorCode: NIL
      joinCode: AND
      index: 1
    - conditionId: has-sid
      propertyPath: auditInfo.subject_claims.ClaimsMap.sid
      operatorCode: NNIL
      joinCode: AND
      index: 2
    - conditionId: manager
      propertyPath: auditInfo.subject_claims.ClaimsMap.groups
      operatorCode: CS
      joinCode: OR
      index: 3
      conditionValues:
        - conditionValueId: manager
          conditionValue: admin
    - conditionId: teller
      propertyPath: auditInfo.subject_claims.ClaimsMap.groups
      operatorCode: CS
      joinCode: OR
      index: 4
      conditionValues:
        - conditionValueId: teller
          conditionValue: frontOffice
    - conditionId: allow-role-jwt
      propertyPath: auditInfo.subject_claims.ClaimsMap.roles
      operatorCode: NNIL
      joinCode: OR
      index: 5
  actions:
    - actionId: match-role
      actionClassName: com.networknt.rule.FineGrainedAuthAction
      actionValues:
        - actionValueId: roles
          value: $roles

controller-register-access:
  ruleId: controller-register-access
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: Allow client credentials token with sid as customized claim. The sid should match the request body serviceId. The register will only accept cc token. It means that only the a running service can register itself. This endpoint shouldn't be called by the portal view at all.
  conditions:
    - conditionId: allow-cc
      propertyPath: auditInfo.subject_claims.ClaimsMap.user_id
      operatorCode: NIL
      joinCode: AND
      index: 1
    - conditionId: has-sid
      propertyPath: auditInfo.subject_claims.ClaimsMap.sid
      operatorCode: NNIL
      joinCode: AND
      index: 2
    - conditionId: has-sid-match-body
      propertyPath: auditInfo.subject_claims.ClaimsMap.sid
      operatorCode: EQ
      joinCode: AND
      index: 3
      conditionValues:
        - conditionValueId: body-serviceId
          expression: true
          conditionValue: requestBody.serviceId
  actions:
    - actionId: match-role
      actionClassName: com.networknt.rule.FineGrainedAuthAction
      actionValues:
        - actionValueId: roles
          value: $roles

controller-check-access:
  ruleId: controller-check-access
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: Allow client credentials token with sid as customized claim. The sid should be contained in the id property of the body in the put request. The check will only accept cc token. It means that only the a running service can check itself to let controler know it is healthy. This endpoint shouldn't be called by the portal view at all.
  conditions:
    - conditionId: allow-cc
      propertyPath: auditInfo.subject_claims.ClaimsMap.user_id
      operatorCode: NIL
      joinCode: AND
      index: 1
    - conditionId: has-sid
      propertyPath: auditInfo.subject_claims.ClaimsMap.sid
      operatorCode: NNIL
      joinCode: AND
      index: 2
    - conditionId: body-id-has-sid
      propertyPath: requestBody.id
      operatorCode: CS
      joinCode: AND
      index: 3
      conditionValues:
        - conditionValueId: sid
          expression: true
          conditionValue: auditInfo.subject_claims.ClaimsMap.sid
  actions:
    - actionId: match-role
      actionClassName: com.networknt.rule.FineGrainedAuthAction
      actionValues:
        - actionValueId: roles
          value: $roles

controller-deregister-access:
  ruleId: controller-deregister-access
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: Allow client credentail token access with sid as customized claim. The sid should match the query parameter serviceId and only cc token is allowed to access. It means that only the a running service can register itself. This endpoint shouldn't be called by the portal view at all.
  conditions:
    - conditionId: allow-cc
      propertyPath: auditInfo.subject_claims.ClaimsMap.user_id
      operatorCode: NIL
      joinCode: AND
      index: 1
    - conditionId: has-sid
      propertyPath: auditInfo.subject_claims.ClaimsMap.sid
      operatorCode: NNIL
      joinCode: AND
      index: 2
    - conditionId: has-sid-match-query
      propertyPath: auditInfo.subject_claims.ClaimsMap.sid
      operatorCode: EQ
      joinCode: AND
      index: 3
      conditionValues:
        - conditionValueId: query-serviceId
          expression: true
          conditionValue: queryParameters.serviceId.First
  actions:
    - actionId: match-role
      actionClassName: com.networknt.rule.FineGrainedAuthAction
      actionValues:
        - actionValueId: roles
          value: $roles

controller-group-role:
  ruleId: controller-group-role
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: Rule that converts a list of AD groups to controller roles before invoking the portal-role-access rule for role-based authentication
  conditions:
    - conditionId: CtlPltRead
      propertyPath: auditInfo.subject_claims.ClaimsMap.groups
      operatorCode: CS
      joinCode: OR
      index: 1
      conditionValues:
        - conditionValueId: CtlPltRead
          conditionValue: User_API_Dev_R
    - conditionId: CtlPltWrite
      propertyPath: auditInfo.subject_claims.ClaimsMap.groups
      operatorCode: CS
      joinCode: OR
      index: 2
      conditionValues:
        - conditionValueId: CtlPltWrite
          conditionValue: User_API_Dev_W
    - conditionId: CtlPltAdmin
      propertyPath: auditInfo.subject_claims.ClaimsMap.groups
      operatorCode: CS
      joinCode: OR
      index: 2
      conditionValues:
        - conditionValueId: CtlPltAdmin
          conditionValue: User_API_Dev_A
  actions:
    - actionId: collect-role
      actionClassName: com.networknt.rule.GroupRoleTransformAction

config-service-access:
  ruleId: config-service-access
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: Rule-based authorization for portal service and allow cc token with sid claim to access the config server configs, certs and files endpoint during the service startup to get config files.
  conditions:
    - conditionId: allow-cc
      propertyPath: auditInfo.subject_claims.ClaimsMap.user_id
      operatorCode: NIL
      joinCode: AND
      index: 1
    - conditionId: has-sid
      propertyPath: auditInfo.subject_claims.ClaimsMap.sid
      operatorCode: NNIL
      joinCode: AND
      index: 2
    - conditionId: sid-match-path
      propertyPath: auditInfo.subject_claims.ClaimsMap.sid
      operatorCode: EQ
      joinCode: AND
      index: 3
      conditionValues:
        - conditionValueId: path-service
          expression: true
          conditionValue: pathParameters.service-name.First
  actions:
    - actionId: match-role
      actionClassName: com.networknt.rule.FineGrainedAuthAction
      actionValues:
        - actionValueId: roles
          value: $roles



portal-role-access:
  ruleId: portal-role-access
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: Rule-based authorization for portal service and allow certain roles to access certain endpoints. For AD integration, it transforms the group into a role. This is for the portal services like controller and config server access from the portal view.
  conditions:
    - conditionId: allow-role-jwt
      propertyPath: auditInfo.subject_claims.ClaimsMap.roles
      operatorCode: NNIL
      joinCode: OR
      index: 1
  actions:
    - actionId: match-role
      actionClassName: com.networknt.rule.FineGrainedAuthAction
      actionValues:
        - actionValueId: roles
          value: $roles

get-config-filter:
  ruleId: get-config-filter
  host: lightapi.net
  ruleType: response-filter
  visibility: public
  description: For CfgAppRead and CfgAppAdmin roles, the list result will be filtered by the service-name that the user has access in the user profile.
  conditions:
    - conditionId: row-filter-role
      propertyPath: auditInfo.subject_claims.ClaimsMap.roles
      operatorCode: IN
      joinCode: OR
      index: 1
      conditionValues:
        - conditionValueId: role-list
          conditionValue: CfgAppRead CfgAppAdmin
  actions:
    - actionId: filter-row
      actionClassName: com.networknt.rule.RoleFilterRowAction
    - actionId: filter-col
      actionClassName: com.networknt.rule.RoleFilterColAction

petstore-group-role-transform:
  ruleId: petstore-group-role-transform
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: A rule to transform a list of Active Directory groups to a list of roles for petstore API
  conditions:
    - conditionId: manager
      propertyPath: groups
      operatorCode: CS
      joinCode: OR
      index: 1
      conditionValues:
        - conditionValueId: manager
          conditionValue: admin
    - conditionId: teller
      propertyPath: groups
      operatorCode: CS
      joinCode: OR
      index: 2
      conditionValues:
        - conditionValueId: teller
          conditionValue: frontOffice

petstore-response-header-replace:
  ruleId: petstore-response-header-replace
  host: lightapi.net
  ruleType: response-transform
  visibility: public
  description: Transform the response to replace one header with the other header.
  conditions:
    - conditionId: path-pets
      propertyPath: requestPath
      operatorCode: EQ
      joinCode: AND
      index: 1
      conditionValues:
        - conditionValueId: path
          conditionValue: /v1/pets
    - conditionId: path-dogs
      propertyPath: requestPath
      operatorCode: EQ
      joinCode: OR
      index: 2
      conditionValues:
        - conditionValueId: path
          conditionValue: /v1/dogs
    - conditionId: path-cats
      propertyPath: requestPath
      operatorCode: EQ
      joinCode: OR
      index: 3
      conditionValues:
        - conditionValueId: path
          conditionValue: /v1/cats

  actions:
    - actionId: header-transform
      actionClassName: com.networknt.rule.ValidationAction
      actionValues:
        - actionValueId: sourceHeader
          value: X-Test-1
        - actionValueId: targetHeader
          value: My-Header

petstore-response-header-replace-in:
  ruleId: petstore-response-header-replace-in
  host: lightapi.net
  ruleType: response-transform
  visibility: public
  description: Transform the response to replace one header with the other header.
  conditions:
    - conditionId: path-pets
      propertyPath: requestPath
      operatorCode: IN
      joinCode: AND
      index: 1
      conditionValues:
        - conditionValueId: pets
          conditionValue: /v1/pets
        - conditionValueId: dogs
          conditionValue: /v1/dogs
        - conditionValueId: cats
          conditionValue: /v1/cats
  actions:
    - actionId: header-transform
      actionClassName: com.networknt.rule.ValidationAction
      actionValues:
        - actionValueId: sourceHeader
          value: X-Test-1
        - actionValueId: targetHeader
          value: My-Header

petstore-response-header-replace-match:
  ruleId: petstore-response-header-replace-match
  host: lightapi.net
  ruleType: response-transform
  visibility: public
  description: Transform the response to replace one header with the other header.
  conditions:
    - conditionId: BankingServices
      propertyPath: requestPath
      operatorCode: MATCH
      joinCode: AND
      index: 1
      conditionValues:
        - conditionValueId: path
          conditionValue: /v3/(.*)/BankingServices/(.*)
    - conditionId: insight
      propertyPath: requestPath
      operatorCode: MATCH
      joinCode: OR
      index: 2
      conditionValues:
        - conditionValueId: path
          conditionValue: /v3/(.*)/insight/login/(.*)/attributes/(.*)
    - conditionId: Investments
      propertyPath: requestPath
      operatorCode: MATCH
      joinCode: OR
      index: 3
      conditionValues:
        - conditionValueId: path
          conditionValue: /v3/(.*)/Investments
    - conditionId: attributes
      propertyPath: requestPath
      operatorCode: MATCH
      joinCode: OR
      index: 4
      conditionValues:
        - conditionValueId: path
          conditionValue: /v3/(.*)/attributes/(.*)

test-priority-rule:
  ruleId: test-priority-rule
  host: lightapi.net
  ruleType: generic
  visibility: public
  description: test rule priority
  priority: 1
  conditions:
    - conditionId: cid1
      propertyPath: ClassA.Bobject.Cobject.Cint
      operatorCode: GT
      joinCode: AND
      index: 0
      conditionValues:
        - conditionValueId: cv1
          conditionValue: 5
  actions:
    - actionId: act1
      actionClassName: com.networknt.rule.ValidationAction

test-priority-rule2:
  ruleId: test-priority-rule2
  host: lightapi.net
  ruleType: generic
  visibility: public
  description: test rule priority
  priority: 2
  conditions:
    - conditionId: cid1
      propertyPath: ClassA.Bobject.Cobject.Cint
      operatorCode: GT
      joinCode: AND
      index: 0
      conditionValues:
        - conditionValueId: cv1
          conditionValue: 6
          valueTypeCode: STRING
  actions:
    - actionId: act1
      actionClassName: com.networknt.rule.ValidationAction

test-len-eq-rule:
  ruleId: test-len-eq-rule
  host: lightapi.net
  ruleType: generic
  visibility: public
  description: test string length equal
  conditions:
    - conditionId: cid1
      propertyPath: ClassA.Aname
      operatorCode: LEN_EQ
      joinCode: AND
      index: 0
      conditionValues:
        - conditionValueId: cv1
          conditionValue: 6
          valueTypeCode: STRING
  actions:
    - actionId: act1
      actionClassName: com.networknt.rule.ValidationAction

test-len-gt-rule:
  ruleId: test-len-gt-rule
  host: lightapi.net
  ruleType: generic
  visibility: public
  description: test string "ClassAA" length greater than another string length "6" and the result is true
  conditions:
    - conditionId: cid1
      propertyPath: ClassA.Aname
      operatorCode: LEN_GT
      joinCode: AND
      index: 0
      conditionValues:
        - conditionValueId: cv1
          conditionValue: 6
          valueTypeCode: STRING
  actions:
    - actionId: act1
      actionClassName: com.networknt.rule.ValidationAction

test-len-gt-rule-int:
  ruleId: test-len-gt-rule-int
  host: lightapi.net
  ruleType: generic
  visibility: public
  description: test string "ClassAA" length greater than an integer 9 and the result is false
  conditions:
    - conditionId: cid1
      propertyPath: ClassA.Aname
      operatorCode: LEN_GT
      joinCode: AND
      index: 0
      conditionValues:
        - conditionValueId: cv1
          conditionValue: 9
          valueTypeCode: INTEGER
  actions:
    - actionId: act1
      actionClassName: com.networknt.rule.ValidationAction

test-len-lt-rule:
  ruleId: test-len-lt-rule
  host: lightapi.net
  ruleType: generic
  visibility: public
  description: test string length less than
  conditions:
    - conditionId: cid1
      propertyPath: ClassA.Aname
      operatorCode: LEN_LT
      joinCode: AND
      index: 0
      conditionValues:
        - conditionValueId: cv1
          conditionValue: 6
          valueTypeCode: INTEGER
  actions:
    - actionId: act1
      actionClassName: com.networknt.rule.ValidationAction

test-match-rule:
  ruleId: test-match-rule
  host: lightapi.net
  ruleType: generic
  visibility: public
  description: test string match
  conditions:
    - conditionId: cid1
      propertyPath: ClassA.Aname
      operatorCode: MATCH
      joinCode: AND
      index: 0
      conditionValues:
        - conditionValueId: cv1
          conditionValue: Class.*
  actions:
    - actionId: act1
      actionClassName: com.networknt.rule.ValidationAction

test-not-match-rule:
  ruleId: test-not-match-rule
  host: lightapi.net
  ruleType: generic
  visibility: public
  description: test string not match
  conditions:
    - conditionId: cid1
      propertyPath: ClassA.Aname
      operatorCode: NMATCH
      joinCode: AND
      index: 0
      conditionValues:
        - conditionValueId: cv1
          conditionValue: ClassB.*
  actions:
    - actionId: act1
      actionClassName: com.networknt.rule.ValidationAction

test-empty-rule:
  ruleId: test-empty-rule
  host: lightapi.net
  ruleType: generic
  visibility: public
  description: test string empty
  conditions:
    - conditionId: cid1
      propertyPath: ClassA.Bobject.Cobject.Cname
      operatorCode: EMPTY
      joinCode: AND
      index: 0
  actions:
    - actionId: act1
      actionClassName: com.networknt.rule.ValidationAction

test-not-empty-rule:
  ruleId: test-not-empty-rule
  host: lightapi.net
  ruleType: generic
  visibility: public
  description: test string not empty
  conditions:
    - conditionId: cid1
      propertyPath: ClassA.Bobject.Cobject.Cname
      operatorCode: NEMPTY
      joinCode: AND
      index: 0
  actions:
    - actionId: act1
      actionClassName: com.networknt.rule.ValidationAction

test-blank-rule:
  ruleId: test-blank-rule
  host: lightapi.net
  ruleType: generic
  visibility: public
  description: test string blank
  conditions:
    - conditionId: cid1
      propertyPath: ClassA.Bobject.Cobject.Cname
      operatorCode: BLANK
      joinCode: AND
      index: 0
  actions:
    - actionId: act1
      actionClassName: com.networknt.rule.ValidationAction

test-not-blank-rule:
  ruleId: test-not-blank-rule
  host: lightapi.net
  ruleType: generic
  visibility: public
  description: test string not blank
  conditions:
    - conditionId: cid1
      propertyPath: ClassA.Bobject.Cobject.Cname
      operatorCode: NBLANK
      joinCode: AND
      index: 0
  actions:
    - actionId: act1
      actionClassName: com.networknt.rule.ValidationAction

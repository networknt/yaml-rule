rule1:
  ruleId: rule1
  host: lightapi.net
  ruleType: generic
  visibility: public
  description: first rule for unit test
  conditions:
    - conditionId: cid1
      propertyPath: ClassA.Bobject.Cobject.Cint
      operatorCode: EQ
      joinCode: AND
      index: 0
      conditionValues:
        - conditionValueId: cv1
          conditionValue: 6
  actions:
    - actionId: act1
      actionClassName: com.networknt.rule.ValidationAction

role-based-auth:
  ruleId: role-based-auth
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: Role-based authorization rule for a particuler service with parameters different per endpoint.
  conditions:
    - conditionId: allow-role
      propertyPath: auditInfo.subject_claims.ClaimsMap.roles
      operatorCode: NNIL
      joinCode: OR
      index: 1
  actions:
    - actionId: match-role
      actionClassName: com.networknt.rule.FineGrainedAuthAction
      actionValues:
        - actionValueId: roles
          value: $roles

role-based-auth-skip-cc:
  ruleId: role-based-auth-skip-cc
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: Role-based authorization rule for a particuler service with parameters different per endpoint. Client Credentials token is allowed without role in claims
  conditions:
    - conditionId: allow-cc
      propertyPath: auditInfo.subject_claims.ClaimsMap.user_id
      operatorCode: NIL
      joinCode: OR
      index: 1
    - conditionId: allow-role
      propertyPath: auditInfo.subject_claims.ClaimsMap.roles
      operatorCode: NNIL
      joinCode: OR
      index: 2
  actions:
    - actionId: match-role
      actionClassName: com.networknt.rule.FineGrainedAuthAction
      actionValues:
        - actionValueId: roles
          value: $roles

cc-group-role-auth:
  ruleId: cc-group-role-auth
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: Role-based authorization rule for account service and allow cc token and transform group to role.
  conditions:
    - conditionId: allow-cc
      propertyPath: auditInfo.subject_claims.ClaimsMap.user_id
      operatorCode: NIL
      joinCode: OR
      index: 1
    - conditionId: manager
      propertyPath: auditInfo.subject_claims.ClaimsMap.groups
      operatorCode: CS
      joinCode: OR
      index: 2
      conditionValues:
        - conditionValueId: manager
          conditionValue: admin
    - conditionId: teller
      propertyPath: auditInfo.subject_claims.ClaimsMap.groups
      operatorCode: CS
      joinCode: OR
      index: 3
      conditionValues:
        - conditionValueId: teller
          conditionValue: frontOffice
    - conditionId: allow-role-jwt
      propertyPath: auditInfo.subject_claims.ClaimsMap.roles
      operatorCode: NNIL
      joinCode: OR
      index: 4
  actions:
    - actionId: match-role
      actionClassName: com.networknt.rule.FineGrainedAuthAction
      actionValues:
        - actionValueId: roles
          value: $roles

ccsid-group-role-auth:
  ruleId: ccsid-group-role-auth
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: Role-based authorization rule for account service and allow cc token with sid claim and transform group to role. This is for the controller and config server.
  conditions:
    - conditionId: allow-cc
      propertyPath: auditInfo.subject_claims.ClaimsMap.user_id
      operatorCode: NIL
      joinCode: AND
      index: 1
    - conditionId: has-sid
      propertyPath: auditInfo.subject_claims.ClaimsMap.sid
      operatorCode: NNIL
      joinCode: AND
      index: 2
    - conditionId: manager
      propertyPath: auditInfo.subject_claims.ClaimsMap.groups
      operatorCode: CS
      joinCode: OR
      index: 3
      conditionValues:
        - conditionValueId: manager
          conditionValue: admin
    - conditionId: teller
      propertyPath: auditInfo.subject_claims.ClaimsMap.groups
      operatorCode: CS
      joinCode: OR
      index: 4
      conditionValues:
        - conditionValueId: teller
          conditionValue: frontOffice
    - conditionId: allow-role-jwt
      propertyPath: auditInfo.subject_claims.ClaimsMap.roles
      operatorCode: NNIL
      joinCode: OR
      index: 5
  actions:
    - actionId: match-role
      actionClassName: com.networknt.rule.FineGrainedAuthAction
      actionValues:
        - actionValueId: roles
          value: $roles

controller-register-access:
  ruleId: controller-register-access
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: Allow client credentials token with sid as customized claim. The sid should match the request body serviceId. The register will only accept cc token. It means that only the a running service can register itself. This endpoint shouldn't be called by the portal view at all.
  conditions:
    - conditionId: allow-cc
      propertyPath: auditInfo.subject_claims.ClaimsMap.user_id
      operatorCode: NIL
      joinCode: AND
      index: 1
    - conditionId: has-sid
      propertyPath: auditInfo.subject_claims.ClaimsMap.sid
      operatorCode: NNIL
      joinCode: AND
      index: 2
    - conditionId: has-sid-match-body
      propertyPath: auditInfo.subject_claims.ClaimsMap.sid
      operatorCode: EQ
      joinCode: AND
      index: 3
      conditionValues:
        - conditionValueId: body-serviceId
          expression: true
          conditionValue: requestBody.serviceId
  actions:
    - actionId: match-role
      actionClassName: com.networknt.rule.FineGrainedAuthAction
      actionValues:
        - actionValueId: roles
          value: $roles

controller-deregister-access:
  ruleId: controller-deregister-access
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: Allow client credentail token access with sid as customized claim. The sid should match the query parameter serviceId and only cc token is allowed to access. It means that only the a running service can register itself. This endpoint shouldn't be called by the portal view at all.
  conditions:
    - conditionId: allow-cc
      propertyPath: auditInfo.subject_claims.ClaimsMap.user_id
      operatorCode: NIL
      joinCode: AND
      index: 1
    - conditionId: has-sid
      propertyPath: auditInfo.subject_claims.ClaimsMap.sid
      operatorCode: NNIL
      joinCode: AND
      index: 2
    - conditionId: has-sid-match-query
      propertyPath: auditInfo.subject_claims.ClaimsMap.sid
      operatorCode: EQ
      joinCode: AND
      index: 3
      conditionValues:
        - conditionValueId: query-serviceId
          expression: true
          conditionValue: queryParameters.serviceId.First
  actions:
    - actionId: match-role
      actionClassName: com.networknt.rule.FineGrainedAuthAction
      actionValues:
        - actionValueId: roles
          value: $roles

get-config-access:
  ruleId: get-config-access
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: Role-based authorization rule for account service and allow cc token with sid claim and transform group to role. This is for the controller and config server.
  conditions:
    - conditionId: allow-cc
      propertyPath: auditInfo.subject_claims.ClaimsMap.user_id
      operatorCode: NIL
      joinCode: AND
      index: 1
    - conditionId: has-sid
      propertyPath: auditInfo.subject_claims.ClaimsMap.sid
      operatorCode: NNIL
      joinCode: AND
      index: 2
    - conditionId: sid-match-path
      propertyPath: auditInfo.subject_claims.ClaimsMap.sid
      operatorCode: EQ
      joinCode: AND
      index: 3
      conditionValues:
        - conditionValueId: path-service
          expression: true
          conditionValue: pathParameters.service-name.First
    - conditionId: manager
      propertyPath: auditInfo.subject_claims.ClaimsMap.groups
      operatorCode: CS
      joinCode: OR
      index: 4
      conditionValues:
        - conditionValueId: manager
          conditionValue: admin
    - conditionId: teller
      propertyPath: auditInfo.subject_claims.ClaimsMap.groups
      operatorCode: CS
      joinCode: OR
      index: 5
      conditionValues:
        - conditionValueId: teller
          conditionValue: frontOffice
    - conditionId: allow-role-jwt
      propertyPath: auditInfo.subject_claims.ClaimsMap.roles
      operatorCode: NNIL
      joinCode: OR
      index: 6
  actions:
    - actionId: match-role
      actionClassName: com.networknt.rule.FineGrainedAuthAction
      actionValues:
        - actionValueId: roles
          value: $roles

get-config-filter:
  ruleId: get-config-filter
  host: lightapi.net
  ruleType: response-filter
  visibility: public
  description: For CfgAppRead and CfgAppAdmin roles, the list result will be filtered by the service-name that the user has access in the user profile.
  conditions:
    - conditionId: row-filter-role
      propertyPath: auditInfo.subject_claims.ClaimsMap.roles
      operatorCode: IN
      joinCode: OR
      index: 1
      conditionValues:
        - conditionValueId: role-list
          conditionValue: CfgAppRead CfgAppAdmin
  actions:
    - actionId: filter-row
      actionClassName: com.networknt.rule.RoleFilterRowAction
    - actionId: filter-col
      actionClassName: com.networknt.rule.RoleFilterColAction

petstore-group-role-transform:
  ruleId: petstore-group-role-transform
  host: lightapi.net
  ruleType: request-access
  visibility: public
  description: A rule to transform a list of Active Directory groups to a list of roles for petstore API
  conditions:
    - conditionId: manager
      propertyPath: groups
      operatorCode: CS
      joinCode: OR
      index: 1
      conditionValues:
        - conditionValueId: manager
          conditionValue: admin
    - conditionId: teller
      propertyPath: groups
      operatorCode: CS
      joinCode: OR
      index: 2
      conditionValues:
        - conditionValueId: teller
          conditionValue: frontOffice
